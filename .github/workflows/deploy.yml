name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build for Production
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      
      - name: Enable Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main
      
      - name: Build jq binary with Nix
        run: nix build .#jq -o jq-build
      
      - name: Prepare jq files for application
        run: |
          mkdir -p public
          cp jq-build/bin/jq public/jq
          chmod +x public/jq
          echo "Production jq binary: $(public/jq --version)"
      
      - name: Setup pnpm and install dependencies
        uses: ./.github/actions/setup-install

      - name: Build application
        run: pnpm run build
        env:
          BASE_URL: /hason/
      
      - name: Verify jq in build output
        run: |
          ls -la packages/app/dist/jq* || echo "No jq files found in dist - check if copying is needed"
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./packages/app/dist

  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4